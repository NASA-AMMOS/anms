# On merge to main publish with the 'latest' label
# Publish with release label when a releaes is published.
name: Build and publish containers
on:
  push:
    branches:
    - main
    # For testing: delete this prior to merging PR
    - feature/177-ghcr_container_publishing
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  DOCKER_IMAGE_PREFIX: ghcr.io/${{ github.repository_owner }}/anms/

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.collect.outputs.images }}
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Set image tag
        id: vars
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Collect built images
        id: collect
        run: |
          export DOCKER_IMAGE_PREFIX=${{ env.DOCKER_IMAGE_PREFIX }}
          export DOCKER_IMAGE_TAG=${{ steps.vars.outputs.tag }}
          docker compose config | yq -r '.services[] | select(.build) | .image' | sort -u > images.txt
          echo "images=$(jq -Rc '[splits("\n") | select(length>0)]' images.txt)" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ${{ fromJson(needs.prepare.outputs.images) }}

    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push ${{ matrix.image }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ matrix.image }}
